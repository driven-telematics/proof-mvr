AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  mvr-sam-app with comprehensive logging and S3 streaming

Globals:
  Function:
    Timeout: 30
    LoggingConfig:
      LogFormat: JSON
    Environment:
      Variables:
        S3_AUDIT_BUCKET: mvr-audit-logs
        AUDIT_FIREHOSE_NAME: MVRAuditFirehose

Resources:
  MVRAuditLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/mvr-audit-group"
      RetentionInDays: 30

  FirehoseDeliveryRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: FirehoseDeliveryPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:AbortMultipartUpload
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:PutObject
                Resource:
                  - arn:aws:s3:::mvr-audit-logs
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !GetAtt LogProcessorFunction.Arn

  LogProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: log-processor/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Timeout: 300
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello-world/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      VpcConfig:
        SecurityGroupIds:
          - sg-09b13c689ca54eb6e
        SubnetIds:
          - subnet-0bbaa5d7391f2f774
          - subnet-0efb623070a90811d
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: !GetAtt MVRAuditLogGroup.Arn
            - Effect: Allow
              Action:
                - firehose:PutRecord
                - firehose:PutRecordBatch
              Resource: arn:aws:firehose:us-east-1:619071327381:deliverystream/MVRAuditFirehose
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  AddMVRFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: add-mvr/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      VpcConfig:
        SecurityGroupIds:
          - sg-09b13c689ca54eb6e
        SubnetIds:
          - subnet-0bbaa5d7391f2f774
          - subnet-0efb623070a90811d
      Environment:
        Variables:
          USER_AND_PASS_ARN: "arn:aws:secretsmanager:us-east-1:619071327381:secret:mvr-postgresql-username-and-password-sULrF1"
          OTHER_VARS_ARN: "arn:aws:secretsmanager:us-east-1:619071327381:secret:mvr-global-environments-j95x4J"
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: !GetAtt MVRAuditLogGroup.Arn
            - Effect: Allow
              Action:
                - firehose:PutRecord
                - firehose:PutRecordBatch
              Resource: arn:aws:firehose:us-east-1:619071327381:deliverystream/MVRAuditFirehose
            - Effect: Allow
              Action: 
                -  secretsmanager:GetSecretValue
              Resource: 
                - "arn:aws:secretsmanager:us-east-1:619071327381:secret:mvr-postgresql-username-and-password-sULrF1"
                - "arn:aws:secretsmanager:us-east-1:619071327381:secret:mvr-global-environments-j95x4J"
      Events:
        AddMVR:
          Type: Api
          Properties:
            Path: /add-mvr
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  BatchAddMVRFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: batch-add-mvr/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      VpcConfig:
        SecurityGroupIds:
          - sg-09b13c689ca54eb6e
        SubnetIds:
          - subnet-0bbaa5d7391f2f774
          - subnet-0efb623070a90811d
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: !GetAtt MVRAuditLogGroup.Arn
            - Effect: Allow
              Action:
                - firehose:PutRecord
                - firehose:PutRecordBatch
              Resource: arn:aws:firehose:us-east-1:619071327381:deliverystream/MVRAuditFirehose
      Events:
        BatchAddMVR:
          Type: Api
          Properties:
            Path: /batch-add-mvr
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  GetMVRFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-mvr/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      VpcConfig:
        SecurityGroupIds:
          - sg-09b13c689ca54eb6e
        SubnetIds:
          - subnet-0bbaa5d7391f2f774
          - subnet-0efb623070a90811d
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: !GetAtt MVRAuditLogGroup.Arn
            - Effect: Allow
              Action:
                - firehose:PutRecord
                - firehose:PutRecordBatch
              Resource: arn:aws:firehose:us-east-1:619071327381:deliverystream/MVRAuditFirehose
      Events:
        GetMVR:
          Type: Api
          Properties:
            Path: /get-mvr
            Method: get
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: "true"

Outputs:
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"

  AddMVRApi:
    Description: API Gateway endpoint URL for Prod stage for adding MVR function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/add-mvr/"

  BatchAddMVRApi:
    Description: API Gateway endpoint URL for Prod stage for batch adding MVR function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/batch-add-mvr/"

  GetMVRApi:
    Description: API Gateway endpoint URL for Prod stage for getting an MVR function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get-mvr/"

  MVRAuditBucket:
    Description: The audit bucket
    Value: mvr-audit-logs

  MVRAuditLogGroup:
    Description: CloudWatch Log Group for MVR audit logs
    Value: !Ref MVRAuditLogGroup

  MVRAuditFirehose:
    Description: Kinesis Data Firehose stream for MVR audit logs
    Value: arn:aws:firehose:us-east-1:619071327381:deliverystream/MVRAuditFirehose
